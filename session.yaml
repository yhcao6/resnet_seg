model:
  py: /home/yhcao6/resnet_seg/resnet.py
snapshot_interval: 10000
load_from: /home/yhcao6/resnet_seg/params.h5
work_dir: work_dir
max_iter: 20000
init_missing: true

# average loss ?
# execute flow train and flow val alternately
epoch:
  - flow: train
    policy: iterate
    args:
      iter_num: 1000    # total iter_num x batch_size samples
      log_vars: [loss]
      log_interval: 20

flows:
  - train:
      spec:
        inputs: [data, label, label_weight]
        outputs: [loss]
        losses: [loss]
      batch_size: 2
      inner_iter: 5
      devices: gpu(0:2) # other options: gpu(0) or gpu(0: 2)
      learn:
        lr: 2.5e-4
        weight_decay: 0.0005
        # lr_policy: fixed
        lr_policy: poly(20000, 0.9)
        updater:
          type: sgd
          momentum: 0.9
      feeder:
        pipeline:
          - expr: "data, label, label_weight = seg_reader()"
            attr:
              source: /home/yhcao6/VOC_arg/train.txt
              data_root: /home/yhcao6/VOC_arg
              label_root: /home/yhcao6/VOC_arg
              is_shuffle: 1
              is_mirror: 1

loggers:
  - type: local
  - type: pavi
    args:
      url: http://pavi.parrotsdnn.org/log
      username: yhcao6 
      password: Cyh1996418 

extra:
  custom_paths: ['/home/yhcao6/parrots_vgg16_seg']
  custom_modules: ['seg_reader']
# record_best:
#   val_flow: val
#   field: accuracy
#   factor: -1
